{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar NoteContext = createContext();\nvar NoteProvider = function NoteProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    notes = _useState2[0],\n    setNotes = _useState2[1];\n  var findNotes = function _callee() {\n    var result;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('notes'));\n        case 2:\n          result = _context.sent;\n          if (result !== null) setNotes(JSON.parse(result));\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, null, Promise);\n  };\n  useEffect(function () {\n    findNotes();\n  }, []);\n  return _jsx(NoteContext.Provider, {\n    value: {\n      notes: notes,\n      setNotes: setNotes,\n      findNotes: findNotes\n    },\n    children: children\n  });\n};\nexport var useNotes = function useNotes() {\n  return useContext(NoteContext);\n};\nexport default NoteProvider;","map":{"version":3,"names":["AsyncStorage","React","createContext","useContext","useEffect","useState","NoteContext","NoteProvider","children","notes","setNotes","findNotes","getItem","result","JSON","parse","useNotes"],"sources":["/Users/leduy/Workspace/Note-App-last-commit/CS526-CK-git/app/contexts/NoteProvider.js"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { createContext, useContext, useEffect, useState } from 'react';\n\nconst NoteContext = createContext();\nconst NoteProvider = ({ children }) => {\n  const [notes, setNotes] = useState([]);\n\n  const findNotes = async () => {\n    const result = await AsyncStorage.getItem('notes');\n    if (result !== null) setNotes(JSON.parse(result));\n  };\n\n  useEffect(() => {\n    findNotes();\n  }, []);\n\n  return (\n    <NoteContext.Provider value={{ notes, setNotes, findNotes }}>\n      {children}\n    </NoteContext.Provider>\n  );\n};\n\nexport const useNotes = () => useContext(NoteContext);\n\nexport default NoteProvider;\n"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,2CAA2C;AACpE,OAAOC,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE9E,IAAMC,WAAW,GAAGJ,aAAa,EAAE;AACnC,IAAMK,YAAY,GAAG,SAAfA,YAAY,OAAqB;EAAA,IAAfC,QAAQ,QAARA,QAAQ;EAC9B,gBAA0BH,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/BI,KAAK;IAAEC,QAAQ;EAEtB,IAAMC,SAAS,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA,iCACKX,YAAY,CAACY,OAAO,CAAC,OAAO,CAAC;QAAA;UAA5CC,MAAM;UACZ,IAAIA,MAAM,KAAK,IAAI,EAAEH,QAAQ,CAACI,IAAI,CAACC,KAAK,CAACF,MAAM,CAAC,CAAC;QAAC;QAAA;UAAA;MAAA;IAAA;EAAA,CACnD;EAEDT,SAAS,CAAC,YAAM;IACdO,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,OACE,KAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEF,KAAK,EAALA,KAAK;MAAEC,QAAQ,EAARA,QAAQ;MAAEC,SAAS,EAATA;IAAU,CAAE;IAAA,UACzDH;EAAQ,EACY;AAE3B,CAAC;AAED,OAAO,IAAMQ,QAAQ,GAAG,SAAXA,QAAQ;EAAA,OAASb,UAAU,CAACG,WAAW,CAAC;AAAA;AAErD,eAAeC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}