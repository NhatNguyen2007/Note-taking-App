{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Intro from \"./app/screens/Intro\";\nimport NoteScreen from \"./app/screens/NoteScreen\";\nimport NoteDetail from \"./app/components/NoteDetail\";\nimport NoteProvider from \"./app/contexts/NoteProvider\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isAppFirstTimeOpen = _useState4[0],\n    setIsAppFirstTimeOpen = _useState4[1];\n  var findUser = function _callee() {\n    var result;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n        case 2:\n          result = _context.sent;\n          if (!(result === null)) {\n            _context.next = 5;\n            break;\n          }\n          return _context.abrupt(\"return\", setIsAppFirstTimeOpen(true));\n        case 5:\n          setUser(JSON.parse(result));\n          setIsAppFirstTimeOpen(false);\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, null, Promise);\n  };\n  useEffect(function () {\n    findUser();\n  }, []);\n  var renderNoteScreen = function renderNoteScreen(props) {\n    return _jsx(NoteScreen, _objectSpread(_objectSpread({}, props), {}, {\n      user: user\n    }));\n  };\n  if (isAppFirstTimeOpen) return _jsx(Intro, {\n    onFinish: findUser\n  });\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsx(NavigationContainer, {\n      children: _jsx(NoteProvider, {\n        children: _jsxs(Stack.Navigator, {\n          screenOptions: {\n            headerTitle: '',\n            headerTransparent: true\n          },\n          children: [_jsx(Stack.Screen, {\n            component: renderNoteScreen,\n            name: \"NoteScreen\"\n          }), _jsx(Stack.Screen, {\n            component: NoteDetail,\n            name: \"NoteDetail\"\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  }\n});","map":{"version":3,"names":["AsyncStorage","StatusBar","React","useEffect","useState","createStackNavigator","NavigationContainer","Intro","NoteScreen","NoteDetail","NoteProvider","Stack","App","user","setUser","isAppFirstTimeOpen","setIsAppFirstTimeOpen","findUser","getItem","result","JSON","parse","renderNoteScreen","props","styles","container","headerTitle","headerTransparent","StyleSheet","create","flex","backgroundColor"],"sources":["/Users/leduy/Workspace/Note-App-last-commit/CS526-CK-git/App.js"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, SafeAreaView } from 'react-native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\n\nimport Intro from './app/screens/Intro';\nimport NoteScreen from './app/screens/NoteScreen';\nimport NoteDetail from './app/components/NoteDetail';\nimport NoteProvider from './app/contexts/NoteProvider';\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  const [user, setUser] = useState({});\n  const [isAppFirstTimeOpen, setIsAppFirstTimeOpen] = useState(false);\n  const findUser = async () => {\n    const result = await AsyncStorage.getItem('user');\n\n    if (result === null) return setIsAppFirstTimeOpen(true);\n\n    setUser(JSON.parse(result));\n    setIsAppFirstTimeOpen(false);\n  };\n\n  useEffect(() => {\n    findUser();\n  }, []);\n\n  const renderNoteScreen = props => <NoteScreen {...props} user={user} />;\n\n  if (isAppFirstTimeOpen) return <Intro onFinish={findUser} />;\n  return (\n    <SafeAreaView style={styles.container}>\n      <NavigationContainer>\n        <NoteProvider>\n          <Stack.Navigator\n            screenOptions={{ headerTitle: '', headerTransparent: true }}\n          >\n            <Stack.Screen component={renderNoteScreen} name='NoteScreen' />\n            <Stack.Screen component={NoteDetail} name='NoteDetail' />\n          </Stack.Navigator>\n        </NoteProvider>\n      </NavigationContainer>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n});\n"],"mappings":";;;;;AAAA,OAAOA,YAAY,MAAM,2CAA2C;AACpE,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAEnD,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,OAAOC,KAAK;AACZ,OAAOC,UAAU;AACjB,OAAOC,UAAU;AACjB,OAAOC,YAAY;AAAoC;AAAA;AAEvD,IAAMC,KAAK,GAAGN,oBAAoB,EAAE;AAEpC,eAAe,SAASO,GAAG,GAAG;EAC5B,gBAAwBR,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAA;IAA7BS,IAAI;IAAEC,OAAO;EACpB,iBAAoDV,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA5DW,kBAAkB;IAAEC,qBAAqB;EAChD,IAAMC,QAAQ,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA,iCACMjB,YAAY,CAACkB,OAAO,CAAC,MAAM,CAAC;QAAA;UAA3CC,MAAM;UAAA,MAERA,MAAM,KAAK,IAAI;YAAA;YAAA;UAAA;UAAA,iCAASH,qBAAqB,CAAC,IAAI,CAAC;QAAA;UAEvDF,OAAO,CAACM,IAAI,CAACC,KAAK,CAACF,MAAM,CAAC,CAAC;UAC3BH,qBAAqB,CAAC,KAAK,CAAC;QAAC;QAAA;UAAA;MAAA;IAAA;EAAA,CAC9B;EAEDb,SAAS,CAAC,YAAM;IACdc,QAAQ,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAGC,KAAK;IAAA,OAAI,KAAC,UAAU,kCAAKA,KAAK;MAAE,IAAI,EAAEV;IAAK,GAAG;EAAA;EAEvE,IAAIE,kBAAkB,EAAE,OAAO,KAAC,KAAK;IAAC,QAAQ,EAAEE;EAAS,EAAG;EAC5D,OACE,KAAC,YAAY;IAAC,KAAK,EAAEO,MAAM,CAACC,SAAU;IAAA,UACpC,KAAC,mBAAmB;MAAA,UAClB,KAAC,YAAY;QAAA,UACX,MAAC,KAAK,CAAC,SAAS;UACd,aAAa,EAAE;YAAEC,WAAW,EAAE,EAAE;YAAEC,iBAAiB,EAAE;UAAK,CAAE;UAAA,WAE5D,KAAC,KAAK,CAAC,MAAM;YAAC,SAAS,EAAEL,gBAAiB;YAAC,IAAI,EAAC;UAAY,EAAG,EAC/D,KAAC,KAAK,CAAC,MAAM;YAAC,SAAS,EAAEb,UAAW;YAAC,IAAI,EAAC;UAAY,EAAG;QAAA;MACzC;IACL;EACK,EACT;AAEnB;AAEA,IAAMe,MAAM,GAAGI,UAAU,CAACC,MAAM,CAAC;EAC/BJ,SAAS,EAAE;IACTK,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACnB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}