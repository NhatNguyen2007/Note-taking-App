{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport RoundIconBtn from \"../components/RoundIconBtn\";\nimport colors from \"../misc/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Intro = function Intro(_ref) {\n  var onFinish = _ref.onFinish;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var handleOnChangeText = function handleOnChangeText(text) {\n    return setName(text);\n  };\n  var handleSubmit = function _callee() {\n    var user;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          user = {\n            name: name\n          };\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem('user', JSON.stringify(user)));\n        case 3:\n          if (onFinish) onFinish();\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, null, Promise);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      hidden: true\n    }), _jsxs(View, {\n      style: styles.content,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Welcome to MyNotes\"\n      }), _jsx(Text, {\n        style: styles.subtitle,\n        children: \"Please enter your name to continue\"\n      }), _jsx(TextInput, {\n        value: name,\n        onChangeText: handleOnChangeText,\n        placeholder: \"Enter Name\",\n        style: styles.textInput\n      }), name.trim().length >= 3 ? _jsx(RoundIconBtn, {\n        antIconName: \"arrowright\",\n        onPress: handleSubmit,\n        style: styles.submitButton\n      }) : null]\n    })]\n  });\n};\nvar width = Dimensions.get('window').width - 50;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.PRIMARY\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 40,\n    fontWeight: 'bold',\n    color: colors.WHITE,\n    marginBottom: 20\n  },\n  subtitle: {\n    fontSize: 22,\n    color: colors.WHITE,\n    opacity: 0.8,\n    marginBottom: 40\n  },\n  textInput: {\n    borderWidth: 2,\n    borderColor: colors.WHITE,\n    color: colors.WHITE,\n    width: width,\n    height: 50,\n    borderRadius: 10,\n    paddingLeft: 15,\n    fontSize: 25,\n    marginBottom: 20\n  },\n  submitButton: {\n    marginTop: 20,\n    backgroundColor: colors.WHITE\n  }\n});\nexport default Intro;","map":{"version":3,"names":["AsyncStorage","React","useState","RoundIconBtn","colors","Intro","onFinish","name","setName","handleOnChangeText","text","handleSubmit","user","setItem","JSON","stringify","styles","container","content","title","subtitle","textInput","trim","length","submitButton","width","Dimensions","get","StyleSheet","create","flex","backgroundColor","PRIMARY","justifyContent","alignItems","fontSize","fontWeight","color","WHITE","marginBottom","opacity","borderWidth","borderColor","height","borderRadius","paddingLeft","marginTop"],"sources":["/Users/leduy/Workspace/Note-App-last-commit/CS526-CK-git/app/screens/Intro.js"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { useState } from 'react';\nimport {\n  View,\n  StyleSheet,\n  Text,\n  TextInput,\n  StatusBar,\n  Dimensions,\n} from 'react-native';\nimport RoundIconBtn from '../components/RoundIconBtn';\nimport colors from '../misc/colors';\n\nconst Intro = ({ onFinish }) => {\n  const [name, setName] = useState('');\n  const handleOnChangeText = text => setName(text);\n\n  const handleSubmit = async () => {\n    const user = { name: name };\n    await AsyncStorage.setItem('user', JSON.stringify(user));\n    if (onFinish) onFinish();\n  };\n\n  return (\n    <View style={styles.container}>\n      <StatusBar hidden />\n      <View style={styles.content}>\n        <Text style={styles.title}>Welcome to MyNotes</Text>\n        <Text style={styles.subtitle}>\n          Please enter your name to continue\n        </Text>\n        <TextInput\n          value={name}\n          onChangeText={handleOnChangeText}\n          placeholder='Enter Name'\n          style={styles.textInput}\n        />\n        {name.trim().length >= 3 ? (\n          <RoundIconBtn\n            antIconName='arrowright'\n            onPress={handleSubmit}\n            style={styles.submitButton}\n          />\n        ) : null}\n      </View>\n    </View>\n  );\n};\n\nconst width = Dimensions.get('window').width - 50;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.PRIMARY,\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 40,\n    fontWeight: 'bold',\n    color: colors.WHITE,\n    marginBottom: 20,\n  },\n  subtitle: {\n    fontSize: 22,\n    color: colors.WHITE,\n    opacity: 0.8,\n    marginBottom: 40,\n  },\n  textInput: {\n    borderWidth: 2,\n    borderColor: colors.WHITE,\n    color: colors.WHITE,\n    width,\n    height: 50,\n    borderRadius: 10,\n    paddingLeft: 15,\n    fontSize: 25,\n    marginBottom: 20,\n  },\n  submitButton: {\n    marginTop: 20,\n    backgroundColor: colors.WHITE,\n  },\n});\n\nexport default Intro;\n"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,2CAA2C;AACpE,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AASxC,OAAOC,YAAY;AACnB,OAAOC,MAAM;AAAuB;AAAA;AAEpC,IAAMC,KAAK,GAAG,SAARA,KAAK,OAAqB;EAAA,IAAfC,QAAQ,QAARA,QAAQ;EACvB,gBAAwBJ,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7BK,IAAI;IAAEC,OAAO;EACpB,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB,CAAGC,IAAI;IAAA,OAAIF,OAAO,CAACE,IAAI,CAAC;EAAA;EAEhD,IAAMC,YAAY,GAAG;IAAA;IAAA;MAAA;QAAA;UACbC,IAAI,GAAG;YAAEL,IAAI,EAAEA;UAAK,CAAC;UAAA;UAAA,iCACrBP,YAAY,CAACa,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,CAAC;QAAA;UACxD,IAAIN,QAAQ,EAAEA,QAAQ,EAAE;QAAC;QAAA;UAAA;MAAA;IAAA;EAAA,CAC1B;EAED,OACE,MAAC,IAAI;IAAC,KAAK,EAAEU,MAAM,CAACC,SAAU;IAAA,WAC5B,KAAC,SAAS;MAAC,MAAM;IAAA,EAAG,EACpB,MAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACE,OAAQ;MAAA,WAC1B,KAAC,IAAI;QAAC,KAAK,EAAEF,MAAM,CAACG,KAAM;QAAA,UAAC;MAAkB,EAAO,EACpD,KAAC,IAAI;QAAC,KAAK,EAAEH,MAAM,CAACI,QAAS;QAAA,UAAC;MAE9B,EAAO,EACP,KAAC,SAAS;QACR,KAAK,EAAEb,IAAK;QACZ,YAAY,EAAEE,kBAAmB;QACjC,WAAW,EAAC,YAAY;QACxB,KAAK,EAAEO,MAAM,CAACK;MAAU,EACxB,EACDd,IAAI,CAACe,IAAI,EAAE,CAACC,MAAM,IAAI,CAAC,GACtB,KAAC,YAAY;QACX,WAAW,EAAC,YAAY;QACxB,OAAO,EAAEZ,YAAa;QACtB,KAAK,EAAEK,MAAM,CAACQ;MAAa,EAC3B,GACA,IAAI;IAAA,EACH;EAAA,EACF;AAEX,CAAC;AAED,IAAMC,KAAK,GAAGC,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACF,KAAK,GAAG,EAAE;AACjD,IAAMT,MAAM,GAAGY,UAAU,CAACC,MAAM,CAAC;EAC/BZ,SAAS,EAAE;IACTa,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE3B,MAAM,CAAC4B;EAC1B,CAAC;EACDd,OAAO,EAAE;IACPY,IAAI,EAAE,CAAC;IACPG,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDf,KAAK,EAAE;IACLgB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAEjC,MAAM,CAACkC,KAAK;IACnBC,YAAY,EAAE;EAChB,CAAC;EACDnB,QAAQ,EAAE;IACRe,QAAQ,EAAE,EAAE;IACZE,KAAK,EAAEjC,MAAM,CAACkC,KAAK;IACnBE,OAAO,EAAE,GAAG;IACZD,YAAY,EAAE;EAChB,CAAC;EACDlB,SAAS,EAAE;IACToB,WAAW,EAAE,CAAC;IACdC,WAAW,EAAEtC,MAAM,CAACkC,KAAK;IACzBD,KAAK,EAAEjC,MAAM,CAACkC,KAAK;IACnBb,KAAK,EAALA,KAAK;IACLkB,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE,EAAE;IACfV,QAAQ,EAAE,EAAE;IACZI,YAAY,EAAE;EAChB,CAAC;EACDf,YAAY,EAAE;IACZsB,SAAS,EAAE,EAAE;IACbf,eAAe,EAAE3B,MAAM,CAACkC;EAC1B;AACF,CAAC,CAAC;AAEF,eAAejC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}